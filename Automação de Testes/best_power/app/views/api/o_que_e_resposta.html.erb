<!-- Compiled and minified JavaScript -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/materialize/1.0.0-beta/js/materialize.min.js"></script>

<%= render "navbar"%>
<div class="row">

  <div class="col s3">
    <%= render "sidenav"%>
  </div> 
  
  <div class="col s9">
    <div class="row">
      <div class="col s12" style="margin-top: 20px;">
        <%= link_to "Home", home_index_path, :method => "get", class: "breadcrumb grey-text text-darken-4" %>
        <%= link_to "Home Api", api_home_api_path, :method => "get", class: "breadcrumb grey-text text-darken-4"%>
        <%= link_to "Respostas", api_o_que_e_resposta_path, :method => "get", class: "breadcrumb grey-text text-darken-4"%>
      </div>
    </div>

    <div class="center">
      <%= link_to "Voltar", api_o_que_e_body_path, :method => "get", class:  "btn waves-light blue"%>
      <%= link_to "Próximo", http_codigo_http_path, :method => "get", class:  "btn waves-light blue"%>
    </div>

    <h2>Respostas</h2>
    <p>
      Agora que nossa requisição de um belo bife à parmeggiana de filé mignon foi feita ao garçom (ou à API) e
      <strong>nosso pedido foi transferido para o servidor</strong>, o <strong>servidor</strong> deve interpretar essa 
      informação e <strong>retornar algo</strong>.
    </p>
    <p>
      <%= image_tag("resposta.png",class: "center")%>
    </p>
    <p>
      Perceba que &#8220;algo&#8221; é uma palavra bem genérica.
    </p>
    <p>
      Na realidade, a resposta tem uma anatomia bem definida, <strong>parecida com a requisição</strong>. Ela é composta por
      três partes:
    </p>
    <ul>
      <li>Código HTTP;</li>
      <li>Header;</li>
      <li>Body.</li>
      </ul>
    <p>
      O <strong>Header e o Body tem os mesmos princípios</strong> dos usados para as requisições. Um dá certas diretrizes
      para analisar a mensagem e o outro dá detalhes.
    </p>
    <p>
      É importante notar que cada API pode usar suas próprias regras para definir as informações que serão dadas ao 
      cliente na resposta. Consegue adivinhar onde essas regras estão definidas?
    </p>
    <p>
      Sim, na <span style="text-decoration: underline;"><a href="http://sensedia.com/blog/apis/blocos-de-construcao-parte-2-documentacao/" target="_blank">Documentação</a></span> =)
    </p>
    <p>
      Ao mesmo tempo, existe uma boa dose de homogeneidade entre as APIs, principalmente no que se refere aos códigos de
      retorno HTTP.
    </p>

    <div class="center">
      <%= link_to "Voltar", api_o_que_e_body_path, :method => "get", class:  "btn waves-light blue"%>
      <%= link_to "Próximo", http_codigo_http_path, :method => "get", class:  "btn waves-light blue"%>
    </div>
  </div>

</div>

<!-- Hotjar Tracking Code for https://automacaocombatista.herokuapp.com/ -->
<script>
    (function(h,o,t,j,a,r){
        h.hj=h.hj||function(){(h.hj.q=h.hj.q||[]).push(arguments)};
        h._hjSettings={hjid:927077,hjsv:6};
        a=o.getElementsByTagName('head')[0];
        r=o.createElement('script');r.async=1;
        r.src=t+h._hjSettings.hjid+j+h._hjSettings.hjsv;
        a.appendChild(r);
    })(window,document,'https://static.hotjar.com/c/hotjar-','.js?sv=');
</script>